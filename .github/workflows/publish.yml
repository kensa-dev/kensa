name: Publish Artifacts
on:
  push:
    tags:
      - '*'

env:
  SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
  SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

jobs:
  PublishToStaging:
    runs-on: ubuntu-latest
    if: ${{ !endsWith(github.ref_name, '-SNAPSHOT') }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Publish to Sonatype
        env:
          GIT_TAG_NAME: ${{ github.ref_name }}
        run: make publish-to-sonatype

  PublishToSnapshot:
    runs-on: ubuntu-latest
    if: ${{ endsWith(github.ref_name, '-SNAPSHOT') }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Publish to Sonatype Snapshot
        env:
          GIT_TAG_NAME: ${{ github.ref_name }}
        run: make publish-to-sonatype-snapshot

  DispatchReleaseEvent:
    runs-on: ubuntu-latest
    needs: [PublishToStaging, PublishToSnapshot]
    if: ${{ always() && (needs.PublishToStaging.result == 'success' || needs.PublishToSnapshot.result == 'success') }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Dispatch Release Event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: kensa-dev/kensa
          event-type: kensa-release
          client-payload: '{"version": "${{ github.ref_name }}"}'
